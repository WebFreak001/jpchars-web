/* Ensure layout covers the entire screen. */

html {
	height: 100%;
}


/* Place drawer and content side by side. */

body {
	display: flex;
	flex-direction: row;
	padding: 0;
	margin: 0;
	box-sizing: border-box;
	min-height: 100%;
	width: 100%;
	background: #efefef;
	font-family: Roboto, Arial, Helvetica, sans-serif;
}


/* Stack toolbar and main on top of each other. */

body > .content {
	display: inline-flex;
	flex-direction: column;
	flex-grow: 1;
	height: 100%;
	box-sizing: border-box;
}


/* Place drawer above toolbar shadow. */

.mdc-permanent-drawer {
	z-index: 2;
}

.copyright {
	text-align: center;
	padding: 8px;
	color: rgba(0, 0, 0, 0.54);
}


/* Generic stuff */

#views > .view {
	display: none;
}

#views > .view.active {
	display: block;
}

.mdc-textfield.invalid:after {
	background-color: red !important;
}

.mdc-textfield.invalid > label {
	color: red !important;
}

#score-dialog .details {
	color: rgba(0, 0, 0, 0.87);
}

#score-dialog .grade {
	float: left;
	text-align: center;
	margin-right: 8px;
}

#score-dialog .grade > .icon {
	font-weight: 700;
	font-size: 4em;
	line-height: 1em;
	text-shadow: 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black, 0px 0px 1px black;
}

#score-dialog .grade > .icon.s {
	color: #ffd249;
}

#score-dialog .grade > .icon.a {
	color: #2a92e0;
}

#score-dialog .grade > .icon.b {
	color: #62c528;
}

#score-dialog .grade > .icon.c {
	color: #cc9641;
}

#score-dialog .grade > .icon.d {
	color: #b03931;
}

#score-dialog .grade > .icon.f {
	color: black;
	text-shadow: none;
}

#score-dialog .detail.correct:before {
	content: "Correct: ";
	display: inline;
}

#score-dialog .detail.wrong:before {
	content: "Wrong: ";
	display: inline;
}

figure.score {
	background-color: white;
	padding: 16px;
}

figure.score > canvas {
	width: 100%;
	height: 200px;
}

figure.score > figcaption > span.details {
	color: rgba(0, 0, 0, 0.54);
}

.mdc-switch.mdc-list-item__start-detail {
	height: 14px;
}

#home h3.mdc-typography--subheading2 {
	margin-left: 40px;
	color: rgba(0, 0, 0, 0.54);
}

.mdc-ripple-surface.material-icons {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 40px;
	height: 40px;
	padding: 0;
	border-radius: 50%;
	cursor: pointer;
	user-select: none;
	-webkit-user-select: none;
}

.mdc-list--dense .mdc-list-item__start-detail {
	margin-right: 16px;
}

.mdc-button.multiicons .material-icons {
	padding-top: 6px;
	font-size: 1.4em;
}

#input-autocomplete {
	background: white;
	margin: 0;
	padding: 0;
	box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
	overflow-y: auto;
}

#input-autocomplete > div {
	padding: 8px;
	margin: 0;
	cursor: pointer;
	border-bottom: 1px solid rgba(0, 0, 0, 0.13);
}

#input-autocomplete > div:hover {
	background: rgba(0, 0, 0, 0.15);
}

#input-autocomplete > div > span.detail:before {
	display: inline-block;
	padding: 0 8px;
	content: '/';
	color: rgba(0, 0, 0, 0.13);
}

#input-autocomplete > div > span.detail {
	color: rgba(0, 0, 0, 0.54);
}

hr {
	border: none;
	height: 1px;
	background-color: rgba(0, 0, 0, 0.13);
}


/* Generic modules */

.progress {
	text-align: center;
}

.actions {
	display: flex;
}

.actions button {
	display: block;
	flex-grow: 1;
	margin: 8px;
}

.timelimit .mdc-linear-progress__bar {
	-webkit-transition: none !important;
	-moz-transition: none !important;
	-ms-transition: none !important;
	transition: none !important;
}

.timelimit {
	margin-bottom: 8px;
}

.markdown {
	padding: 16px;
	background: white;
	margin: 16px auto;
	max-width: 1000px;
}

.markdown table {
	width: 100%;
}

#md-kana-cheatsheet table {
	border-collapse: collapse;
}

#md-kana-cheatsheet table td {
	text-align: center;
	width: 8.33333%;
	border: 1px solid rgba(0, 0, 0, 0.13);
}

#md-kana-cheatsheet table th {
	border: 1px solid rgba(0, 0, 0, 0.13);
}


/* Kana module */

.kana {
	padding: 16px;
	max-width: 400px;
	margin: 16px auto;
	background: white;
}

.kana .question {
	text-align: center;
	font-size: 4em;
}

.kana > .mdc-textfield {
	width: 100%;
}

.kana canvas.paintarea {
	display: block;
	margin: auto;
}


/* Vocabulary module */

.vocabulary {
	padding: 16px 0;
	max-width: 800px;
	margin: 16px auto;
	background: white;
}

.vocabulary .mdc-button.multiicons {
	margin: 8px 0;
	padding: 0;
}

.vocabulary .learn .solution {
	font-size: 2em;
	padding: 4px;
	min-height: 1em;
}

.vocabulary .learn .romanization {
	font-size: 1.2em;
	padding: 4px;
	min-height: 1em;
}

.vocabulary-create-topbar {
	display: flex;
}

.vocabulary .mdc-fab {
	position: fixed;
	bottom: 16px;
	right: 16px;
}

@media screen and (min-width: 600px) {
	.vocabulary .mdc-fab {
		bottom: 64px;
		right: 64px;
	}
}

.vocabulary .nopacks {
	text-align: center;
	padding: 32px;
	color: rgba(0, 0, 0, 0.54);
}

.vocabulary .mdc-dialog__body--scrollable {
	max-height: calc(100vh - 180px);
}

#vocabulary-create-dialog-section > label {
	display: block;
	padding: 8px;
}

.vocabulary .removebutton .material-icons {
	margin-right: 8px;
	height: 1.1em;
	vertical-align: middle;
}

.vocabulary .name {
	width: 100%;
}

.vocabulary .answer {
	width: 100%;
}

#vocabulary-packs .lang-pair {
	display: block;
	width: 34px;
	height: 18px;
	position: relative;
	margin-left: 8px;
}

#vocabulary-packs .mdc-list-item .mdc-list-item__text {
	flex-direction: row;
}

#vocabulary-packs .lang-pair .flag-icon {
	border-radius: 100%;
	box-shadow: 0 1px 3px rgba(0, 0, 0, 0.6);
	position: absolute;
	position: inline-block;
	width: 18px;
	height: 18px;
}

#vocabulary-packs .lang-pair .lang-from {
	left: 0;
	bottom: 0;
	z-index: 2;
}

#vocabulary-packs .lang-pair .lang-to {
	top: 0;
	right: 0;
	z-index: 1;
}

.vocabulary .kanji .meaning {
	padding: 8px;
}

.vocabulary .kanji .meaning:after {
	display: block;
	content: "";
	clear: both;
}

.vocabulary .kanji .meaning .character {
	float: left;
	font-size: 3em;
	margin-right: 8px;
}


/* SpeedType module */

.speedtype {
	padding: 16px;
	max-width: 600px;
	margin: 16px auto;
	background: white;
	text-align: center;
}

.speedtype .next {
	padding: 8px;
	color: rgba(0, 0, 0, 0.54);
	font-size: 1.5em;
}

.speedtype .current {
	padding: 16px;
	color: rgba(0, 0, 0, 0.87);
	font-size: 2.5em;
}

.speedtype .translation {
	padding: 8px;
	color: rgba(0, 0, 0, 0.54);
}