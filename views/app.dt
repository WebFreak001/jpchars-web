doctype html
html
	- import std.conv;
	- import vibe.core.file;
	- import std.algorithm;
	head
		meta(charset="utf-8")
		meta(http-equiv="x-ua-compatible", content="ie=edge")
		meta(name="viewport", content="width=device-width, initial-scale=1, shrink-to-fit=no")
		title jpchars
		link(rel="stylesheet", href="/flag-icon-css/css/flag-icon.min.css")
		link(rel="stylesheet", href="/material-components-web/dist/material-components-web.css")
		link(rel="stylesheet", href="/css/main.css?" ~ ("public/css/main.css").getFileInfo.timeModified.stdTime.to!string(16))
		link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Roboto:300,400,500")
		link(rel="stylesheet", href="https://fonts.googleapis.com/icon?family=Material+Icons")
	body
		- import modules.imodule;
		aside.mdc-persistent-drawer
			nav.mdc-persistent-drawer__drawer
				.mdc-persistent-drawer__toolbar-spacer
				.mdc-list-group
					nav.mdc-list.modules
						a.mdc-list-item.mdc-permanent-drawer--selected(href="#home", aria-controls="home", onclick="exitModule()")
							i.material-icons.mdc-list-item__start-detail(aria-hidden="true") home
							| Home
						- foreach (mod; loadedModules)
							- if (cast(ModuleSeparator)mod)
								</nav>
								hr.mdc-list-divider
								<nav class="mdc-list modules">
								- continue;
							a.mdc-list-item(href="##{mod.id}", aria-controls=mod.id, onclick="loadModule('#{mod.id}')", title=mod.description("en"))
								i.material-icons.mdc-list-item__start-detail(aria-hidden="true")= mod.icon
								|= mod.name("en")
					nav.mdc-list
						label.mdc-list-item
							.mdc-switch.mdc-list-item__start-detail
								input.mdc-switch__native-control#speedrun(type="checkbox", onchange="speedrun = this.checked")
								.mdc-switch__background
									.mdc-switch__knob
							| Speedrun Mode
						label.mdc-list-item
							.mdc-switch.mdc-list-item__start-detail
								input.mdc-switch__native-control#timers(type="checkbox", checked, onchange="timersEnabled = this.checked; if (!this.checked) pauseTimelimit()")
								.mdc-switch__background
									.mdc-switch__knob
							| Timers
						label.mdc-list-item
							i.material-icons.mdc-list-item__start-detail(aria-hidden="true") cloud
							span#username-preview Offline Mode
					.copyright
						div: a(href="https://github.com/WebFreak001/jpchars-web") Source Code
						div #[a(href="http://kanjivg.tagaini.net") KanjiVG] for strokes
						div Character recognition based off #[a(href="https://tegaki.github.io/") Tegaki] Wagomu Engine
						div #[a(href="https://materialdesignicons.com/") Material Design Icons]
						div Built #{__DATE__} #{__TIME__}
		.content
			.mdc-toolbar.mdc-elevation--z4
				.mdc-toolbar__row
					.mdc-toolbar__section.mdc-toolbar__section--align-start
						button.material-icons.mdc-toolbar__icon--menu menu
						span.mdc-toolbar__title jpchars-web
						//nav.mdc-tab-bar.mdc-tab-bar--indicator-accent#scoreTabs(role="tablist", data-mdc-auto-init="MDCTabBar")
							a.mdc-tab.mdc-tab--active(role="tab", aria-controls="panel-1", href="#panel-1") Item One
							a.mdc-tab(role="tab", aria-controls="panel-2", href="#panel-2") Item Two
							a.mdc-tab(role="tab", aria-controls="panel-3", href="#panel-3") Item Three
							span.mdc-tab-bar__indicator
			main
				section
					#views
						.view.active#home(role="tabpanel", aria-hidden="false")
							- foreach (i, mod; loadedModules)
								- if (cast(ModuleSeparator)mod)
									h3.mdc-typography--subheading2= mod.name("en")
								- else
									figure.score.mdc-elevation--z5
										canvas(id="score-" ~ mod.id)
										figcaption= mod.name("en")
											span.details
						- foreach (i, mod; loadedModules)
							- if (cast(ModuleSeparator)mod) continue;
							.view(id=mod.id, role="tabpanel", aria-hidden="true")
								|!= mod.render("en")
		aside.mdc-dialog#score-dialog(role="alertdialog", aria-hidden="true", aria-labelledby="score-dialog-label", aria-describedby="score-dialog-content")
			.mdc-dialog__surface
				header.mdc-dialog__header
					h2.mdc-dialog__header__title#score-dialog-label Unit Finished!
				section.mdc-dialog__body#score-dialog-content
					.grade
						.icon SS
						.score 0%
					.details Details go here
				footer.mdc-dialog__footer
					button.mdc-button.mdc-dialog__footer__button.mdc-dialog__footer__button--cancel Close
			.mdc-dialog__backdrop
		aside.mdc-dialog#startup-dialog(role="alertdialog", aria-hidden="true", aria-labelledby="startup-dialog-label", aria-describedby="startup-dialog-content")
			.mdc-dialog__surface
				header.mdc-dialog__header
					h2.mdc-dialog__header__title#startup-dialog-label Welcome!
				section.mdc-dialog__body.mdc-dialog__body--scrollable#startup-dialog-content
					p.
						You can sync your progress across your devices by
						entering a username for your score including a suffix
						separated by a hash (#) to protect others from overwriting your score.
					p If you type in the exact name on another device it will join all results and you can
						| use both devices to track your learning progress. An example for a good name would be
						code bob#banana&calendar-sandwich1329
					p.
						If you don't want to sync your progress accross devices simply leave this field blank.
					div.mdc-textfield
						input.mdc-textfield__input#username-input(type="text")
						label.mdc-textfield__label(for="username-input") Username#Hash
						.mdc-textfield__bottom-line
				footer.mdc-dialog__footer
					button.mdc-button.mdc-dialog__footer__button.mdc-dialog__footer__button--accept Save
			.mdc-dialog__backdrop
		div(style="display:none")
			.mdc-checkbox#checkbox-template
				input.mdc-checkbox__native-control(type="checkbox")
				.mdc-checkbox__background
					svg.mdc-checkbox__checkmark(viewBox="0 0 24 24")
						path.mdc-checkbox__checkmark__path(fill="none", stroke="white", d="M1.73,12.91 8.1,19.28 22.79,4.59")
					.mdc-checkbox__mixedmark
		script(src="/material-components-web/dist/material-components-web.js")
		script(src="/js/main.js" ~ '?' ~ ("public/js/main.js").getFileInfo.timeModified.stdTime.to!string(16))
		script(src="/js/score.js" ~ '?' ~ ("public/js/score.js").getFileInfo.timeModified.stdTime.to!string(16))
		- string[] ids;
		- string[] addedScripts;
		- foreach (mod; loadedModules)
			- if (cast(ModuleSeparator)mod) continue;
			- ids ~= mod.id;
			- foreach (script; mod.scripts)
				- if (addedScripts.canFind(script)) continue;
				- addedScripts ~= script;
				script(src=script ~ '?' ~ ("public" ~ script).getFileInfo.timeModified.stdTime.to!string(16))
		- import vibe.data.json;
		script loadScores(#{serializeToJson(ids)});